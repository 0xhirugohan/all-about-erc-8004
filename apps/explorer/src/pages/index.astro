---
import { createPublicClient, http } from 'viem';
import { sepolia } from 'viem/chains';

import '../styles/global.css';

import Welcome from '../components/Welcome.astro';
import Layout from '../layouts/Layout.astro';
import { identityRegistryAbi } from '../abis/identityRegistryAbi';

const SEPOLIA_IDENTITY_REGISTRY_CONTRACT_ADDRESS = "0x8004a6090Cd10A7288092483047B097295Fb8847";

const client = createPublicClient({
	chain: sepolia,
	transport: http(),
});

const blockNumber = await client.getBlockNumber();
const agentDataString = await client.readContract({
	address: SEPOLIA_IDENTITY_REGISTRY_CONTRACT_ADDRESS,
	abi: identityRegistryAbi.abi,
	functionName: 'tokenURI',
	args: [332]
});
// agent_id, capabilities, description, endpoints, identity, timestamp, service_endpoint, version
const agentData = JSON.parse(agentDataString);

const agentIdentitiesResponse = await fetch(
	"http://localhost:42069/graphql",
	{
		method: "POST",
		headers: { "Content-Type": "application/json" },
		body: JSON.stringify({
			query: `
				query {
					agentIdentitys {
						items {
							chainId,
							tokenId,
							ownerAddress,
							tokenUri,
						},
						totalCount
					}
				}
			`,
		}),
	}
);
const agentIdentitiesJson = await agentIdentitiesResponse.json();
const { totalCount: totalAgent, items: agentItems } = agentIdentitiesJson.data.agentIdentitys;
---

<Layout>
	<!--<Welcome />-->
</Layout>

<h1>{sepolia.name}</h1>
<p>Block Number: {blockNumber}</p>
<p>Identity Registry Contract Address: <a target="_blank" href={`https://sepolia.etherscan.io/address/${SEPOLIA_IDENTITY_REGISTRY_CONTRACT_ADDRESS}`}>{SEPOLIA_IDENTITY_REGISTRY_CONTRACT_ADDRESS}</a></p>
<p>Total Registered Agents: {totalAgent}</p>

<p>Description: {agentData.description}</p>

<div class="overflow-x-auto rounded-box border border-base-content/5 bg-base-100">
	<table class="table">
		<thead>
			<tr>
				<th></th>
				<th>Chain ID</th>
				<th>Token ID</th>
				<th>Owner</th>
				<th>Token URI</th>
			</tr>
		</thead>
		<tbody>
			{
				agentItems.map(
					(item, index) => <tr>
						<th>{index + 1}</th>
						<td>{item.chainId}</td>
						<td>{item.tokenId}</td>
						<td>{item.ownerAddress}</td>
						<td>{item.tokenUri}</td>
					</tr>
				)
			}
		</tbody>
	</table>
</div>
